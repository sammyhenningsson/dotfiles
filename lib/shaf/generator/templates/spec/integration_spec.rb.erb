require 'spec_helper'

describe <%= model_class_name %>, type: :integration do

  it "returns a <%= name %>" do
    <%= name %> = <%= model_class_name %>.create
    get <%= name %>_uri(<%= name %>)
    _(status).must_equal 200
    _(link_rels).must_include(:self)
    _(links[:self][:href]).must_equal <%= name %>_uri(<%= name %>)
<% params.each do |param| -%>
    _(attributes).must_include(:'<%= param[0] %>')
<% end -%>
  end

  it "lists all <%= plural_name %>" do
    2.times { <%= model_class_name %>.create }

    get <%= plural_name %>_uri
    _(status).must_equal 200
    _(link_rels).must_include(:self)
    _(links[:self][:href]).must_include <%= plural_name %>_uri
    _(embedded(:'<%= plural_name %>').size).must_equal 2

    each_embedded :'<%= plural_name %>' do
      _(link_rels).must_include(:self)
<% params.each do |param| -%>
      _(attributes).must_include(:'<%= param[0] %>')
<% end -%>
    end
  end
<% if params.size > 0 %>
  it "can create <%= plural_name %>" do
    get <%= plural_name %>_uri

    _(link_rels).must_include(:'create-form')
    follow_rel :'create-form'
    _(links[:self][:href]).must_equal new_<%= name %>_uri
    _(attributes[:href]).must_equal <%= plural_name %>_uri
    _(attributes[:method]).must_equal "POST"
    _(attributes[:name]).must_equal "create-<%= name %>"
    _(attributes[:title]).must_equal "Create <%= model_class_name %>"
    _(attributes[:type]).must_equal "application/json"
    _(attributes[:fields].size).must_equal <%= params.size %>

    payload = fill_form attributes[:fields]
    post attributes[:href], payload
    _(status).must_equal 201
    _(link_rels).must_include(:self)
    _(headers["Location"]).must_equal links[:self][:href]

    get <%= plural_name %>_uri
    _(status).must_equal 200
    _(links[:self][:href]).must_include <%= plural_name %>_uri
    _(embedded(:'<%= plural_name %>').size).must_equal 1

    embedded :'<%= plural_name %>' do
      <%= name %> = last_payload.first
<% params.each do |param| -%>
<% if param[1] == 'string' -%>
      _(<%= name %>[:<%= param[0] %>]).must_equal "value for <%= param[0] %>"
<% elsif param[1] == 'integer' -%>
      _(<%= name %>[:<%= param[0] %>]).must_equal "<%= param[0] %>".size
<% end -%>
<% end -%>
    end
  end

  it "<%= plural_name %> can be updated" do
    <%= name %> = <%= model_class_name %>.create
    get <%= name %>_uri(<%= name %>)
    _(status).must_equal 200

    _(link_rels).must_include(:'edit-form')
    follow_rel :'edit-form'

    _(links[:self][:href]).must_equal edit_<%= name %>_uri(<%= name %>)
    _(attributes[:href]).must_equal <%= name %>_uri(<%= name %>)
    _(attributes[:method]).must_equal "PUT"
    _(attributes[:name]).must_equal "update-<%= name %>"
    _(attributes[:title]).must_equal "Update <%= model_class_name %>"
    _(attributes[:type]).must_equal "application/json"
    _(attributes[:fields].size).must_equal <%= params.size %>

    payload = fill_form attributes[:fields]
    put attributes[:href], payload
    _(status).must_equal 200
    _(link_rels).must_include(:self)
  end
<% end -%>

  it "<%= plural_name %> can be deleted" do
    <%= name %> = <%= model_class_name %>.create
    get <%= name %>_uri(<%= name %>)
    _(status).must_equal 200
    _(link_rels).must_include(:'doc:delete')

    follow_rel(:'doc:delete', method: :delete)
    _(status).must_equal 204

    get <%= name %>_uri(<%= name %>)
    _(status).must_equal 404
  end

end
